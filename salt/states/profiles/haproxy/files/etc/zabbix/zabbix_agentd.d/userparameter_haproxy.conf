#
# Discovery Rule
#

# HAProxy Frontend, Backend and Server Discovery rules
UserParameter=haproxy.list.discovery[*],/var/lib/zabbix/bin/haproxy_discovery.sh $1 $2


# Frontend / Backend current sessions
UserParameter=haproxy.stat.qcur[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f3); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.qmax[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f4;); if [ -z "$RES" ]; then echo "0"; else echo "$RES"; fi
UserParameter=haproxy.stat.scur[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f5); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.smax[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f6;); if [ -z "$RES" ]; then echo "0"; else echo "$RES"; fi
UserParameter=haproxy.stat.slim[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f7;); if [ -z "$RES" ]; then echo "0"; else echo "$RES"; fi
UserParameter=haproxy.stat.bin[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f9); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.bout[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f10); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.dreq[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f11); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.dresp[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f12); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.ereq[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f13); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.econ[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f14); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.eresp[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f15); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.wretr[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f16); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.wredis[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f17); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.status[*],echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f18 | cut -d\  -f1
UserParameter=haproxy.stat.weight[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f19); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.act[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f20); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.bck[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f21); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.chkfail[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f22); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.chkdown[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f23); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.lastchg[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f24); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.downtime[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f25;); if [ -z "$RES" ]; then echo "0"; else echo "$RES"; fi
UserParameter=haproxy.stat.qlimit[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f26;); if [ -z "$RES" ]; then echo "0"; else echo "$RES"; fi
UserParameter=haproxy.stat.pid[*],echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f27
UserParameter=haproxy.stat.iid[*],echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f28
UserParameter=haproxy.stat.sid[*],echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f29
UserParameter=haproxy.stat.throttle[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f30); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.lbtot[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f31); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.tracked[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f32); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.type[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f33); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.rate[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f34); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.rate_lim[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f35;); if [ -z "$RES" ]; then echo "0"; else echo "$RES"; fi
UserParameter=haproxy.stat.rate_max[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f36;); if [ -z "$RES" ]; then echo "0"; else echo "$RES"; fi
UserParameter=haproxy.stat.check_status[*],echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f37
UserParameter=haproxy.stat.check_code[*],echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f38
UserParameter=haproxy.stat.check_duration[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f39); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.hrsp_1xx[*],echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f40
UserParameter=haproxy.stat.hrsp_2xx[*],echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f41
UserParameter=haproxy.stat.hrsp_3xx[*],echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f42
UserParameter=haproxy.stat.hrsp_4xx[*],echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f43
UserParameter=haproxy.stat.hrsp_5xx[*],echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f44
UserParameter=haproxy.stat.hrsp_other[*],echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f45
UserParameter=haproxy.stat.hanafail[*],echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f46
UserParameter=haproxy.stat.req_rate[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f47); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.req_rate_max[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f48;); if [ -z "$RES" ]; then echo "0"; else echo "$RES"; fi
UserParameter=haproxy.stat.req_tot[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f49); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.cli_abrt[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f50); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.srv_abrt[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f51); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.comp_in[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f52;); if [ -z "$RES" ]; then echo "0"; else echo "$RES"; fi
UserParameter=haproxy.stat.comp_out[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f53;); if [ -z "$RES" ]; then echo "0"; else echo "$RES"; fi
UserParameter=haproxy.stat.comp_byp[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f54;); if [ -z "$RES" ]; then echo "0"; else echo "$RES"; fi
UserParameter=haproxy.stat.comp_rsp[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f55;); if [ -z "$RES" ]; then echo "0"; else echo "$RES"; fi
UserParameter=haproxy.stat.lastsess[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f56); if [ -z "$RES" ]; then echo "9999999999"; else echo "$RES"; fi
UserParameter=haproxy.stat.last_chk[*],echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f57
UserParameter=haproxy.stat.last_agt[*],echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f58
UserParameter=haproxy.stat.qtime[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f59;); if [ -z "$RES" ]; then echo "0"; else echo "$RES"; fi
UserParameter=haproxy.stat.ctime[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f60;); if [ -z "$RES" ]; then echo "0"; else echo "$RES"; fi
UserParameter=haproxy.stat.rtime[*],RES=$(echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f61;); if [ -z "$RES" ]; then echo "0"; else echo "$RES"; fi




# Debugging / Running it manually
## Discover: /usr/local/bin/haproxy_discovery.sh $1 $2
### $1 is a path to haproxy socket
### $2 is FRONTEND or BACKEND or SERVERS
# /usr/local/bin/haproxy_discovery.sh /var/run/haproxy/info.sock FRONTEND    # second argument is optional
# /usr/local/bin/haproxy_discovery.sh /var/run/haproxy/info.sock BACKEND     # second argument is optional
# /usr/local/bin/haproxy_discovery.sh /var/run/haproxy/info.sock SERVERS     # second argument is optional
##
## Bytes In:      echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f9
## Bytes Out:     echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f10
## Session Rate:  echo "show stat" | socat $1 stdio | grep "^$2,$3" | cut -d, -f5
### $1 is a path to haproxy socket
### $2 is a name of the backend, as set in haproxy.cnf
### $3 is a name of the server, as set in haproxy.cnf
# echo "show stat" | socat /var/run/haproxy/info.sock stdio | grep "^www-backend,www01" | cut -d, -f9
# echo "show stat" | socat /var/run/haproxy/info.sock stdio | grep "^www-backend,BACKEND" | cut -d, -f10
# echo "show stat" | socat /var/run/haproxy/info.sock stdio | grep "^https-frontend,FRONTEND" | cut -d, -f5
# echo "show stat" | socat /var/run/haproxy/info.sock stdio | grep "^api-backend,api02" | cut -d, -f18 | cut -d\  -f1
##
# Take a look at the out put of the following to learn more about what is available though HAProxy socket
# echo "show stat" | socat /var/run/haproxy/info.sock stdio
